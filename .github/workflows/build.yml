name: 'Kivy App to APK'
description: 'Build and release Android APK from Kivy application'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: 'x64'
          
      # Updated to Java 17 to fix compatibility issue with Android SDK tools
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip python3-pip \
            autoconf libtool pkg-config zlib1g-dev libncurses-dev \
            cmake libffi-dev libssl-dev
      
      # Use direct command to install Android SDK rather than the action
      - name: Setup Android SDK
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
          mkdir -p ${ANDROID_HOME}/cmdline-tools
          unzip -q cmdline-tools.zip -d ${ANDROID_HOME}/cmdline-tools
          mv ${ANDROID_HOME}/cmdline-tools/cmdline-tools ${ANDROID_HOME}/cmdline-tools/latest
          echo "y" | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-31" "build-tools;30.0.3" "ndk;23.1.7779620"
        env:
          ANDROID_HOME: /usr/local/lib/android/sdk
          
      - name: Fix buildozer.spec
        run: |
          # Fix package.name with no space after equals
          sed -i 's/package.name =asif/package.name = asif/' buildozer.spec
          
          # Fix source.include_exts
          sed -i 's/source.include_exts = py,png,jpg,kv,atlas.csv/source.include_exts = py,png,jpg,kv,atlas,csv/' buildozer.spec
          
          # Fix source.include_patterns
          sed -i 's|source.include_patterns = assets/,images/.png/.csv|source.include_patterns = assets/*,images/*.png,images/*.csv|' buildozer.spec
          
          # Add Android permissions
          sed -i 's|#android.permissions = .*|android.permissions = android.permission.INTERNET|' buildozer.spec
          
          # Set Android API levels
          sed -i 's|#android.api = .*|android.api = 31|' buildozer.spec
          sed -i 's|#android.minapi = .*|android.minapi = 21|' buildozer.spec
          
          # Accept license automatically
          sed -i 's|# android.accept_sdk_license = .*|android.accept_sdk_license = True|' buildozer.spec
          
          # Skip updates to speed up build
          sed -i 's|# android.skip_update = .*|android.skip_update = True|' buildozer.spec
          
      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: ~/.buildozer
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade Cython==0.29.33 virtualenv
          python -m pip install --upgrade buildozer
          
      - name: Configure Git for https connections
        run: |
          git config --global http.sslVerify false
          git config --global http.postBuffer 1048576000
          
      - name: Build with Buildozer
        run: |
          # Set environment variables to avoid Git download timeouts
          export GIT_HTTP_LOW_SPEED_LIMIT=1000
          export GIT_HTTP_LOW_SPEED_TIME=300
          
          # Build with verbose output
          buildozer android debug -v
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.*/x64
          ANDROID_HOME: /usr/local/lib/android/sdk
          
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: bin/*.apk
          if-no-files-found: error
          
      # Optional: Create Release (when pushing tag)
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: bin/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
